TODO: further will make knoledge of minimal ko needed for bring up nerdctl in alpine docker
TODO: get enough ENV info for this project

project structure
-----------------
```text
.
├── containerd
├── dockerfile
├── info
├── Makefile
├── modlist
├── nerdctl
├── readme
├── r.sh
├── scripts
└── tmp

4 directories, 6 files

```


download src code and reset to nerdctl 1.5.0
--------------------------------------------


docker buildkit
---------------
try build up base image with nerdctl dir mounted inside with --mount option, error occurs:
```text
$ make
docker build -t nerdctl:test --build-arg HTTP_PROXY=http://10.144.1.10:8080 --build-arg HTTPS_PROXY=http://10.144.1.10:8080 .
Sending build context to Docker daemon  218.7MB
Step 1/7 : FROM alpine:3.18
 ---> 8ca4688f4f35
Step 2/7 : ENV http_proxy='http://10.144.1.10:8080'
 ---> Using cache
 ---> 60ccf9e0e19f
Step 3/7 : ENV https_proxy='http://10.144.1.10:8080'
 ---> Using cache
 ---> ee030d83b288
Step 4/7 : RUN apk update &&     apk add --no-cache vim &&     apk add --no-cache make &&     apk add --no-cache go &&     apk add --no-cache git &&     apk add --no-cache containerd &&     apk add --no-cache openrc &&     rm -rf /var/cache/apk/*
 ---> Using cache
 ---> 8b217c5d6bff
Step 5/7 : RUN --mount=type=bind,source=/repo1/metung/txt/nerdctl/nerdctl,target=/nerdctl     --mount=type=bind,source=/repo1/metung/txt/nerdctl/containerd,target=/containerd
the --mount option requires BuildKit. Refer to https://docs.docker.com/go/buildkit/ to learn how to build images with BuildKit enabled
```
solution ref: https://docs.docker.com/go/buildkit/


error when try make nerdctl and containerd
------------------------------------------
```text
$ cd /nerdctl
$ make all
...
error obtaining VCS status: exit status 128
Use -buildvcs=false to disable VCS stamping.
make: *** [Makefile:57: nerdctl] Error 1
```

see following diff patch to make it work:
```text
diff --git a/Makefile b/Makefile
index 844ae72..eae05e2 100644
--- a/Makefile
+++ b/Makefile
@@ -37,7 +37,7 @@ VERSION_TRIMMED := $(VERSION:v%=%)
 REVISION ?= $(shell git rev-parse HEAD)$(shell if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi)

 GO_BUILD_LDFLAGS ?= -s -w
-GO_BUILD_FLAGS ?=
+GO_BUILD_FLAGS ?= -buildvcs=false
 export GO_BUILD=GO111MODULE=on CGO_ENABLED=0 GOOS=$(GOOS) $(GO) build -ldflags "$(GO_BUILD_LDFLAGS) -X $(PACKAGE)/pkg/version.Version=$(VERSION) -X $(PACKAGE)/pkg/version.Revision=$(REVISION)"

 ifdef VERBOSE
/repo1/metung/txt/nerdctl
```


install containerd & start service(containerd) using openrc on alpine
---------------------------------------------------------------------
install containerd apk and openrc for startup it as a service:
```text
$ apk add containerd && apk add openrc    # containerd-openrc seems not working
```
about openrc related subtools usages, see help page for rc-status, rc-service...


how to config & startup self-crafted project source binary as a service under openrc
------------------------------------------------------------------------------------
the APKBUILD file shows the step for installing rc script for containerd inside alpine (for rc-service to recognize)
ref: https://gitlab.alpinelinux.org/alpine/aports/-/blob/master/community/containerd/APKBUILD?ref_type=heads

guidance to write some service script
ref: https://github.com/OpenRC/openrc/blob/master/service-script-guide.md


error when using nerdctl based on containerd on alpine docker container
-----------------------------------------------------------------------
```text
$(alpine) nerdctl pull alpine
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++|
index-sha256:51b67269f354137895d43f3b3d810bfacd3945438e94dc5ac55fdac340352f48:    exists         |++++++++++++++++++++++++++++++++++++++|
manifest-sha256:13b7e62e8df80264dbb747995705a986aa530415763a6c58f84a3ca8af9a5bcd: exists         |++++++++++++++++++++++++++++++++++++++|
config-sha256:f8c20f8bbcb684055b4fea470fdd169c86e87786940b3262335b12ec3adef418:   exists         |++++++++++++++++++++++++++++++++++++++|
elapsed: 2.5 s                                                                    total:   0.0 B (0.0 B/s)

$(alpine) nerdctl images
REPOSITORY    TAG       IMAGE ID        CREATED           PLATFORM       SIZE         BLOB SIZE
alpine        latest    51b67269f354    48 minutes ago    linux/amd64    7.7 MiB      3.3 MiB
nginx         latest    4c0fdaa8b634    43 minutes ago    linux/amd64    191.9 MiB    67.3 MiB

$ nerdctl run -it alpine sh
FATA[0000] failed to create shim task: failed to mount rootfs component: invalid argument: unknown
```

question from stackoverflow created:
ref: https://stackoverflow.com/questions/77853986/issue-when-running-nerdctl-inside-docker-alpine-container-failed-to-create-shim

follow suggestions to add the empty dir mounted to /var/lib/containerd in container (r.sh):
```text
docker run -it --rm \
    -v "$spath"/nerdctl:/nerdctl \
    -v /repo1/metung/txt/nerdctl/tmp:/var/lib/containerd \
    --privileged --cap-add all nerdctl:test /scripts/prepare.sh sh
```

the above error is gone, but containerd -> runc still failed to startup:
```text
$(alpine) nerdctl run -it --rm alpine sh
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++|
index-sha256:51b67269f354137895d43f3b3d810bfacd3945438e94dc5ac55fdac340352f48:    done           |++++++++++++++++++++++++++++++++++++++|
manifest-sha256:13b7e62e8df80264dbb747995705a986aa530415763a6c58f84a3ca8af9a5bcd: done           |++++++++++++++++++++++++++++++++++++++|
config-sha256:f8c20f8bbcb684055b4fea470fdd169c86e87786940b3262335b12ec3adef418:   done           |++++++++++++++++++++++++++++++++++++++|
layer-sha256:661ff4d9561e3fd050929ee5097067c34bafc523ee60f5294a37fd08056a73ca:    done           |++++++++++++++++++++++++++++++++++++++|
elapsed: 16.8s                                                                    total:  528.0  (31.0 B/s)
FATA[0036] failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: error during container init: error running hook #0: error running hook: exit status 1, stdout: , stderr: time="2024-01-24T10:05:42Z" level=fatal msg="failed to call cni.Setup: plugin type=\"bridge\" failed (add): failed to locate iptables: exec: \"iptables\": executable file not found in $PATH"
Failed to write to log, write /var/lib/nerdctl/1935db59/containers/default/ee347b7126e690e01b6bfed8dc3546f35b640b447d0470d92e4a78cf977208b9/oci-hook.createRuntime.log: file already closed: unknown
```
a failure when creating iptables rules due to iptables plugin missing.
```text
$(alpine) apk add iptables
fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
(1/4) Installing libmnl (1.0.5-r1)
(2/4) Installing libnftnl (1.2.5-r1)
(3/4) Installing iptables (1.8.9-r2)
(4/4) Installing iptables-openrc (1.8.9-r2)
Executing busybox-1.36.1-r2.trigger
OK: 521 MiB in 56 packages
```
still failed:
```text
$(alpine) nerdctl run -it --rm alpine sh
FATA[0024] failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: error during container init: error running hook #0: error running hook: exit status 1, stdout: , stderr: time="2024-01-24T11:29:54Z" level=fatal msg="failed to call cni.Setup: plugin type=\"bridge\" failed (add): running [/sbin/iptables -t nat -A CNI-54ae9188e0d5c22546f37e29 -d 10.4.0.3/24 -j ACCEPT -m comment --comment name: \"bridge\" id: \"default-e2264e329a118c927392e4c85506e6323bc19c880f8bc0a7aaa04b32eb4fcaa8\" --wait]: exit status 1: Warning: Extension comment revision 0 not supported, missing kernel module?\niptables: No chain/target/match by that name.\n"
Failed to write to log, write /var/lib/nerdctl/1935db59/containers/default/e2264e329a118c927392e4c85506e6323bc19c880f8bc0a7aaa04b32eb4fcaa8/oci-hook.createRuntime.log: file already closed: unknown
```
the iptables cmd with --comment option is failed, seems lack of certain kernel module.
container shared the host kernel, we've enabled --privileged option already, and just modprobe the needed for host:
```text
$(host) modprobe xt_comment
$(host) lsmod | grep xt_comment
xt_comment             16384  0

$(alpine) lsmod | grep xt_comment
xt_comment             16384  0
```

run again, report lack of ip6tables:
```text
$(alpine) nerdctl run -it --rm alpine sh
FATA[0001] failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: error during container init: error running hook #0: error running hook: exit status 1, stdout: , stderr: time="2024-01-24T12:41:01Z" level=fatal msg="failed to call cni.Setup: plugin type=\"firewall\" failed (add): could not initialize iptables protocol 1: exec: \"ip6tables\": executable file not found in $PATH"
Failed to write to log, write /var/lib/nerdctl/1935db59/containers/default/2d573bbab7e42bb2e829bd7609b99e5a8117634ce2eed1642c18b2a4a6b9d0db/oci-hook.createRuntime.log: file already closed: unknown
```
install it:
```text
$(alpine) apk add ip6tables
(1/2) Installing ip6tables (1.8.9-r2)
(2/2) Installing ip6tables-openrc (1.8.9-r2)
Executing busybox-1.36.1-r2.trigger
OK: 521 MiB in 58 packages
```

test running it again:
```text
$(alpine) nerdctl run -d alpine sh
d84bdb90d53cf5997b63578d0b8c9b31d6e27428cbf632b4b2a1a126b3c45fc9

$(alpine) nerdctl ps -a
CONTAINER ID    IMAGE                              COMMAND    CREATED          STATUS                      PORTS    NAMES
d84bdb90d53c    docker.io/library/alpine:latest    "sh"       3 seconds ago    Exited (0) 3 seconds ago             alpine-d84bd

$(alpine) nerdctl ps -a
CONTAINER ID    IMAGE                              COMMAND    CREATED           STATUS                       PORTS    NAMES
d84bdb90d53c    docker.io/library/alpine:latest    "sh"       13 seconds ago    Exited (0) 12 seconds ago             alpine-d84bd

$(alpine) nerdctl rm d84bdb90d53cf5997b63578d0b8c9b31d6e27428cbf632b4b2a1a126b3c45fc9
d84bdb90d53cf5997b63578d0b8c9b31d6e27428cbf632b4b2a1a126b3c45fc9
```
